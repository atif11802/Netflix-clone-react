{"version":3,"sources":["axios.js","Row.jsx","requests.js","Banner.jsx","Nav.jsx","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchDaata","handleClick","movie","id","trailerurl","key","className","map","ind","onClick","src","poster_path","backdrop_path","alt","name","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","fetchData","console","log","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c9ed1b8.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL : \"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\"\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl,isLargeRow }) {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchDaata() {\r\n\t\t\tconst request = await axios.get(fetchUrl);\r\n\t\t\tsetMovies(request.data.results);\r\n\t\t\t\r\n\t\t\treturn request;\r\n\t\t}\r\n\r\n\t\tfetchDaata();\r\n\t}, [fetchUrl]);\r\n\r\n\r\n\tconst handleClick = async (movie) => {\r\n\t\tif (trailerUrl) {\r\n\t\t  setTrailerUrl(\"\");\r\n\t\t} else {\r\n\t\t  let trailerurl = await axios.get(\r\n\t\t\t`/movie/${movie.id}/videos?api_key=fb34530271b349314af0de263d16ab5a`\r\n\t\t  );\r\n\t\t  setTrailerUrl(trailerurl.data.results[0]?.key);\r\n\t\t}\r\n\t  };\r\n\r\n\tconst opts = {\r\n\t\theight:\"390\",\r\n\t\twidth:\"100%\",\r\n\t\tplayerVars: {\r\n\t\t\tautoplay: 1,\r\n\t\t  },\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t{/* title */}\r\n\t\t\t<h1>{title}</h1>\r\n\r\n\t\t\t<div className=\"row__posters\">\r\n\t\t\t\t{/*several row  posters */}\r\n\r\n\t\t\t\t{movies.map((movie,ind) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\tonClick={()=> handleClick(movie)}\r\n                            key={ind}\r\n\t\t\t\t\t\t\tclassName={`row__poster ${isLargeRow && \"row__posterLarge\" }`}\r\n\t\t\t\t\t\t\tsrc={`${base_url}${isLargeRow ? movie.poster_path  : movie.backdrop_path}`}\r\n\t\t\t\t\t\t\talt={movie.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t{trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"a32bc9b159b59bd0fee1df4309538040\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React,{useEffect,useState} from 'react';\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\"\r\n\r\nfunction Banner() {\r\n\r\n\r\n    const[movie,setMovie]=useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n           setMovie(request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length -1 )\r\n            ])\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, [])\r\n    console.log(movie);\r\n\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n      }\r\n\r\n    return (\r\n        // bg img in header\r\n        <header className=\"banner\"\r\n        style={{\r\n            backgroundSize:\"cover\",\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundPosition:\"center center\"\r\n        }}\r\n        >\r\n            <div className=\"banner__contents\">\r\n                      {/* title */}\r\n                      <h1 className=\"banner__title\"> \r\n                          {movie?.title ||   movie?.name || movie?.original_name}\r\n                           </h1>\r\n                    <div className=\"banner__buttons\">\r\n                        <button className=\"banner__button\">\r\n                            play\r\n                        </button>\r\n                        <button className=\"banner__button\">\r\n                            My List\r\n                        </button>\r\n                    </div>\r\n                <h1 className=\"banner__descriptions\">\r\n                    {truncate(movie?.overview, 150)}\r\n                </h1>\r\n\r\n                \r\n                    \r\n                </div>\r\n                <div className=\"banner__fadebottom\">\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React,{ useEffect, useState } from 'react'\r\nimport  \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n          if (window.scrollY > 200) {\r\n            handleShow(true);\r\n          } else {\r\n            handleShow(false);\r\n          }\r\n        });\r\n        return () => {\r\n          window.removeEventListener(\"scroll\");\r\n        };\r\n      }, []); \r\n\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Netflix Logo\"\r\n      /> <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        alt=\"Avatar\"\r\n      />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","\nimport './App.css';\nimport Row from \"./Row\";\nimport requests from './requests';\nimport Banner from \"./Banner\";\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* navbar */}\n      \n      <Nav />\n\n      <Banner />\n\n     <Row title=\"NETFLIX ORIGINAL\"  \n     fetchUrl={\n       requests.fetchNetflixOriginals\n     }\n     isLargeRow\n     />\n     <Row title=\"Trending Now\"\n     fetchUrl={requests.fetchTrending}\n      />\n       <Row title=\"Top Rated\"\n     fetchUrl={requests.fetchTopRated}\n      />\n      \n      <Row title=\"Action Movies\"\n     fetchUrl={requests.fetchActionMovies}\n      />\n      \n      <Row title=\"Comedy Movies\"\n     fetchUrl={requests.fetchComedyMovies}\n      />\n      \n      <Row title=\"Romance Movies\"\n     fetchUrl={requests.fetchRomanceMovies}\n      />\n      <Row title=\"Horror Movies\"\n     fetchUrl={requests.fetchHorrorMovies}\n      />\n      \n      <Row title=\"Documentaries\"\n     fetchUrl={requests.fetchDocumentaries}\n      />\n      \n\n      \n      \n     \n     \n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}